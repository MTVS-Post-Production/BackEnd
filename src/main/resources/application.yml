spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/anime_final?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: ${{ secrets.MYSQL_USERNAME }}
    password: ${{ secrets.MYSQL_PASSWORD }}

  security:
    oauth2:
      client:
        registration:
          naver:
            scope: nickname,email,profile_image
            client-id: ${{ secrets.NAVER_ID }}
            client-name: Naver
            redirect-uri: ${{ secrets.NAVER_REDIRECT }}
            client-authentication-method: post
            authorization-grant-type: authorization_code
            client-secret: ${{ secrets.NAVER_SECRET }}
          kakao:
            client-secret: ${{ secrets.KAKAO_SECRET }}
            redirect-uri: ${{ secrets.KAKAO_REDIRECT }}
            authorization-grant-type: authorization_code
            client-id: ${{ secrets.KAKAO_ID }}
            scope: profile_nickname,profile_image,account_email
            client-name: Kakao
            client-authentication-method: post
          google:
            redirect-uri: ${{ secrets.GOOGLE_REDIRECT }}
            client-id: ${{ secrets.GOOGLE_ID }}
            client-secret: ${{ secrets.GOOGLE_SECRET }}
            scope: profile,email
          facebook:
            client-id: ${{ secrets.FACEBOOK_ID }}
            client-secret: ${{ secrets.FACEBOOK_SECRET }}
            redirect-uri: ${{ secrets.FACEBOOK_REDIRECT }}
            client-authentication-method: post
            authorization-grant-type: authorization_code
        provider:
          kakao:
            user-name-attribute: id
            user-info-uri: https://kapi.kakao.com/v2/user/me
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
            token-uri: https://nid.naver.com/oauth2.0/token

  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.MySQL8Dialect
    properties:
      hibernate:
        format_sql: 'true'
        show_sql: 'true'
    open-in-view: 'false'

logging:
  level:
    org:
      hibernate:
        type:
          descriptor:
            sql: debug

springdoc:
  swagger-ui:
    operationsSorter: method
    path: swagger
    displayRequestDuration: 'true'
    supportedSubmitMethods: '"get", "put", "post", "delete", "options", "head", "patch", "trace"'
    filter: 'true'
    tryItOutEnabled: 'true'

app:
  cors:
    allowedOrigins: http://localhost:3000, http://localhost:8080
  auth:
    refreshTokenExpirationMsec: '604800000'
    accessTokenExpirationMsec: '1800000'
    tokenSecret: ${{ secrets.TOKEN_SECRET }}

server:
  error:
    include-exception: 'true'
    include-stacktrace: always
  port: '8080'
